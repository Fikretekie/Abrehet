type Products 
@model (subscriptions: { level: public }) 
@auth(rules: [
      {allow: public, operations: [read]},
      {allow: groups, groups: ["Admin"], operations: [create, update, delete, read]}
]) {
  id: ID!
  title: String!
  content: AWSJSON!
  country: String
}
 
type Users @model @auth(rules: [{allow: public}]) {
  email: AWSEmail!
  phone: AWSPhone
  name: String
  address: String
  other: AWSJSON
  orders: [Order] @hasMany
}

type Mutation {
  createPayment(input: PaymentInput): PaymentResult
    @function(name: "makePayment-${env}")
}

input PaymentInput {
  amount: Float
  total: Int
  name: String
  email: String
}

type PaymentResult {
  statusCode: Int
  body: String
}

type Order @model @auth(rules: [{allow: public}]) {
  userID: String
  phone: AWSPhone
  name: String
  address: String
  city: String
  Products: AWSJSON
}
 